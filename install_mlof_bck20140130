#!/usr/bin/env bash

while getopts d option
do
  case "${option}"
  in
    d) dflag=1;;
  esac
done
shift $(( OPTIND-1 ))

# Verify inputs
if [ "$#" -lt 2 ]; then 
  echo "Usage in DPS:  install_pipecal source idlpath"
  echo "      locally: install_pipecal -l source idlpath"
  exit 1
fi

# Set the destination directory where the package lives
destination=$(cd "$1" && pwd)
echo "Checking installation path..."
if [ ! -d $destination ]; then
  echo "Directory does not exist: $destination"
  echo "Aborting installation"
  exit 1
fi

# Set the source directory
dirsrc=$(cd "${destination}/src" && pwd)
echo "Checking source path..."
if [ ! -d $dirwork ]; then
  echo "Directory does not exist: $dirsrc"
  echo "Aborting installation"
  exit 1
fi

# Set the binary directory
dirbin=$(cd "${destination}/bin" && pwd)
echo "Checking binary path..."
if [ ! -d $dirbin ]; then
  echo "Directory does not exist: $dirbin"
  echo "Aborting installation"
  exit 1
fi

# Set the library directory
dirlib=$(cd "${destination}/lib" && pwd)
echo "Checking library path..."
if [ ! -d $dirlib ]; then
  echo "Directory does not exist: $dirlib"
  echo "Aborting installation"
  exit 1
fi

# Set the miscellaneous directory
dirmisc=$(cd "${destination}/misc" && pwd)
echo "Checking miscellaneous path..."
if [ ! -d $dirmisc ]; then
  echo "Directory does not exist: $dirmisc"
  echo "Aborting installation"
  exit 1
fi

# Set the idl directory where the package lives
idldir=$(cd "$2" && pwd)
echo "Checking idl library path..."
if [ ! -d $idldir ]; then
  echo "Directory does not exist: $idldir"
  echo "Aborting installation"
  exit 1
fi

# Set the astro library directory
dirast=$(cd "${idldir}/astron" && pwd)
echo "Checking astro library path..."
if [ ! -d $dirast ]; then
  echo "Directory does not exist: $dirast"
  echo "Aborting installation"
  exit 1
fi

# Set the astro library directory
dircoy=$(cd "${idldir}/coyote" && pwd)
echo "Checking coyote library path..."
if [ ! -d $dircoy ]; then
  echo "Directory does not exist: $dircoy"
  echo "Aborting installation"
  exit 1
fi

# Update mlofidlpath routine under bin
if [ ! -f $dirbin/mlofidlpath ]; then
  echo "mlofidlpath does not exist under $dirbin"
  echo "Aborting installation"
  exit 1
fi

echo "Setting ROOT DIRECTORY: $destination"
perl -pi -e "s|.*rootdir\s*=.*|rootdir='$destination'|i" $dirbin/mlofidlpath

echo "Setting IDL DIRECTORY: $idldir"
perl -pi -e "s|.*idldir\s*=.*|idldir='$idldir'|i" $dirbin/mlofidlpath

# Now change the script type if in dps
# Default script type is ksh
# Script type in dcs is dcsksh
if [ ! -z "$dflag" ]; then
  echo "Updating scripts to DPS environment: ksh ==>> dcsksh"
  list=$(ls ${destination}/bin)
  echo $list
  for i in $list
  do
    if [ -f "${destination}/bin/$i" ]; then
      echo "Change shell type for $i to dcsksh"
      perl -pi -e "s|.*#!/usr/bin/env ksh.*|#!/usr/bin/env dcsksh|i" ${destination}/bin/$i
    fi
  done
else
  echo "Updating scripts to DPS environment: dcsksh ==>> ksh"
  list=$(ls ${destination}/bin)
  echo $list
  for i in $list
  do
    if [ -f "${destination}/bin/$i" ]; then
      echo "Change shell type for $i to ksh"
      perl -pi -e "s|.*#!/usr/bin/env dcsksh.*|#!/usr/bin/env ksh|i" ${destination}/bin/$i
    fi
  done
fi

echo "INSTALLATION SUCCEDED"
exit 0